<?php

/**
 * @file
 * Tests for basic image handling.
 */

/**
 * The SimpletestExampleTestCase is a functional test case, meaning that it
 * actually exercises a particular sequence of actions through the web UI.
 * The majority of core test cases are done this way, but the Simpletest suite
 * also provides unit tests as demonstrated in the unit test case example later
 * in this file.
 *
 * Functional test cases are far slower to execute than unit test cases because
 * they require a complete Drupal install to be done for each test.
 *
 * @see DrupalWebTestCase
 * @see SimpletestUnitTestExampleTestCase
 */
class SimpletestExampleTestCase extends DrupalWebTestCase {
  protected $privileged_user;

  public static function getInfo() {
    return array(
      'name' => 'ASC Image Tests',
      'description' => 'Ensure that the asc image file type provided functions properly.',
      'group' => 'ASC',
    );
  }

  public function setUp() {
    parent::setUp('asc_image_handling','file_entity','media','token','ctools','features');  // Enable any modules required for the test
    // Create and log in our user. The user has the arbitrary privilege
    // 'extra special edit any simpletest_example' which the code uses
    // to grant access.
    $this->privileged_user = $this->drupalCreateUser(array('administer files', 'edit file', 'view file'));
    $this->drupalLogin($this->privileged_user);
  }

  public function testASCImageHandlingLink() {
    // Create node to edit.
    $this->drupalGet('admin/content/file');
    $this->assertLink('Add File', 0, 'Add file link is available from file admin page.');
  }

  public function testASCImageHandlingUpload() {
    // Create node to edit.
    $image = realpath('/Users/mike/dev/quick-drupal-20120625122221/drupal/sites/all/modules/asc_image_handling/images/branding.png');
    $this->drupalPost('file/add', array('files[upload]' => $image), t('Submit'));
    $this->assertText('was uploaded', 'File uploaded using form.');

  }

}
